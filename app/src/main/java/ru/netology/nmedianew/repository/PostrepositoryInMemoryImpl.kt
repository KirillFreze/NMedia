package ru.netology.nmedianew.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.netology.nmedianew.dto.Post

class PostRepositoryInMemoryImpl: PostRepository {
    private var idNext = 1L
    private var posts = listOf(
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "12 мая в 18:36",
            "Разнообразный и богатый опыт реализация намеченного плана развития представляет собой интересный эксперимент проверки соответствующих условий активизации.",
            false,
            999,
            90,
            //true
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "21 мая в 18:36",
            "Равным образом реализация намеченного плана развития обеспечивает широкому кругу специалистов участие в формировании позиций, занимаемых участниками в отношении поставленных задач.",
            false,
            78,
            1500,
            //false
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "18 мая в 18:36",
            "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен → http://netolo.gy/fyb",
            false,
            458,
            1000000,
            //true
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "17 мая в 18:36",
            "С другой стороны постоянное информационно-техническое обеспечение нашей деятельности позволяет выполнить важнейшие задания по разработке дальнейших направлений развитая системы массового участия?",
            false,
            999,
            90,
            //false
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "05 мая в 18:36",
            "С другой стороны постоянное информационно-техническое обеспечение нашей деятельности напрямую зависит от новых предложений?",
            false,
            999,
            90,
            //false
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "21 мая в 18:36",
            "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен → http://netolo.gy/fyb",
            false,
            999,
            90,
           // false
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "21 мая в 18:36",
            "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен → http://netolo.gy/fyb",
            false,
            999,
            90,
            //false
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "21 мая в 18:36",
            "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен → http://netolo.gy/fyb",
            false,
            999,
            90,
           // true
        ),
        Post(
            id =idNext++,
            "Нетология. Университет интернет-профессий будущего",
            "21 мая в 18:36",
            "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен → http://netolo.gy/fyb",
            false,
            999,
            90,
            //false
        )

    )
    private val data = MutableLiveData(posts)

    override fun getAll(): LiveData<List<Post>> = data

    override fun likeById(id: Long) {
        posts = posts.map {
            if (it.id != id) it else it.copy(
                likedByMe = !it.likedByMe,
                likes = if (it.likedByMe) it.likes - 1 else it.likes + 1
            )
        }
        data.value = posts
    }

    override fun removeById(id: Long) {
        posts = posts.filter { it.id != id }
        data.value = posts
    }

    override fun save(post: Post) {
        posts = if (post.id == 0L){
            listOf(post.copy(id = idNext++, author = "Me", published = "Now")) + posts

        } else {
           posts.map{
               if (it.id != post.id) it else it.copy(content = post.content)
           }
        }
        data.value = posts
    }



}